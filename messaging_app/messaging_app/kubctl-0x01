#!/bin/bash

# Ensure script exits on any error
set -e

# Scale the deployment to 3 replicas
echo "Scaling deployment to 3 replicas..."
kubectl scale deployment messaging-app-deployment --replicas=3

# Wait for pods to become ready
echo "Waiting for pods to be ready..."
kubectl wait --for=condition=ready pod -l app=messaging-app --timeout=120s

# Verify running pods
echo "Current pods:"
kubectl get pods -l app=messaging-app

# Start port-forward in background
echo "Starting port-forward to service..."
kubectl port-forward service/messaging-app-service 8080:80 > /dev/null 2>&1 &
PORT_FORWARD_PID=$!
sleep 5  # Allow port-forward to initialize

# Perform load testing if wrk is available
if command -v wrk &>/dev/null; then
    echo "Starting load test with wrk..."
    wrk -t4 -c100 -d30s http://localhost:8080/
else
    echo "wrk not found. Install with 'sudo apt-get install wrk' or visit https://github.com/wg/wrk"
fi

# Cleanup port-forward
echo "Stopping port-forward..."
kill $PORT_FORWARD_PID

# Monitor resource usage
echo "Resource usage:"
if kubectl top pods &>/dev/null; then
    kubectl top pods -l app=messaging-app
else
    echo "Metrics server not installed. To enable resource monitoring:"
    echo "  minikube addons enable metrics-server"
fi

echo "Scaling test completed successfully!"
